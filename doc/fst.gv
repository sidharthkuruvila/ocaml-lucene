digraph G {
  start_of_node [
    label = "Start of node"
  ]

  bit_table_start [
    label = "Start of bit_table"
  ]

  pos_arc_start [
    label = "Start of arc list"
  ]

  direct_addressing_arc [
    label = "{Direct Addressing Arc | <f0>0x40 :byte|num_arcs :vint|bytes_per_arc :vint| <f1>presence_bytes: byte[(num_arcs + 7) \>\>\> 3] | first_label: byte | <f2> arcs : byte[bytes_per_arc*count_bits(presence_bytes)]}"
    shape = "record"
  ]

  start_of_node -> direct_addressing_arc:f0

  bit_table_start -> direct_addressing_arc:f1

  pos_arc_start -> direct_addressing_arc:f2

  direct_addressing_arc:f2 -> arc

  arc [
    label = "{Arc|<f0>flag_bits: byte| output: string? flag bit 4 is set | final_output: string? flag bit 5 is set|target: int? flag bits 2 and 3 are unset}"
    shape = "record"
  ]

  arc_flag_bits [
    label = "{Arc flag bits|{ {0 | 1 | 2 | 3 | 4 | 5}| {Is final arc | Is last arc in node | Next node follows current node | Next node is stop | Arc has output | Arc has final output }}}"
    shape="record"
  ]

  arc:f0 -> arc_flag_bits
}